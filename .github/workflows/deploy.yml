name: Laravel CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install PHP Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Install NPM Dependencies
      run: npm install

    - name: Build assets
      run: npm run build

    - name: Generate application key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Copy .env for production
      run: |
        cp .env.production .env
        sed -i "s|APP_URL=.*|APP_URL=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}|" .env

    - name: Install PHP Dependencies
      run: composer install --optimize-autoloader --no-dev

    - name: Install NPM Dependencies
      run: npm install

    - name: Build assets for production
      run: npm run build

    - name: Generate application key
      run: php artisan key:generate

    - name: Create production database
      run: |
        mkdir -p database
        touch database/database.sqlite
        php artisan migrate --force
        php artisan db:seed --force

    - name: Optimize Laravel for production
      run: |
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache

    - name: Create static build
      run: |
        mkdir -p static_build
        # Copy the entire Laravel application
        rsync -av --exclude='.git' --exclude='node_modules' --exclude='tests' --exclude='.github' --exclude='storage/logs/*' --exclude='storage/framework/cache/*' --exclude='storage/framework/sessions/*' --exclude='storage/framework/views/*' . static_build/
        # Recreate vendor with production dependencies
        cd static_build && composer install --optimize-autoloader --no-dev --no-interaction
        # Ensure proper directory structure and permissions
        mkdir -p static_build/storage/logs
        mkdir -p static_build/storage/framework/cache
        mkdir -p static_build/storage/framework/sessions
        mkdir -p static_build/storage/framework/views
        chmod -R 755 static_build/storage static_build/bootstrap/cache
        # Copy the database
        cp database/database.sqlite static_build/database/database.sqlite

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './static_build'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
